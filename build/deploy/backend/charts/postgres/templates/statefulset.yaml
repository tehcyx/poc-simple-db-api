apiVersion: apps/v1
kind: StatefulSet
metadata:
   labels:
      app: postgres
   name: postgres
   namespace: {{ .Release.Namespace }}
spec:
   serviceName: "postgres"
   replicas: 1
   selector:
      matchLabels:
         app: postgres
   template:
      metadata:
         labels:
            app: postgres
         annotations:
            sidecar.istio.io/inject: "true"
            traffic.sidecar.istio.io/includeInboundPorts: "5432"
      spec:
         containers:
            - name: postgres
              image: tehcyx/postgres:0.1.0
              env:
               - name: POSTGRES_DB
                 valueFrom:
                  configMapKeyRef:
                     name: postgres-config
                     key: POSTGRES_DB
               - name: POSTGRES_USER
                 valueFrom:
                  configMapKeyRef:
                     name: postgres-config
                     key: POSTGRES_USER
               - name: POSTGRES_PASSWORD
                 valueFrom:
                  secretKeyRef:
                     name: postgres-secret
                     key: POSTGRES_PASSWORD
              ports:
              - containerPort: 5432
                name: postgredb
              volumeMounts:
              - name: postgredb
                mountPath: /var/lib/postgresql/data
                subPath: postgres
   volumeClaimTemplates:
   - metadata:
         name: postgresdb
     spec:
         accessModes: ["ReadWriteOnce"]
         resources:
            requests:
               storage: 256Mi